{"ast":null,"code":"var _jsxFileName = \"/Users/didymusne/Documents/projects/watchlist/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEY = \"stocks\";\n\nconst App = () => {\n  _s();\n\n  const [stocks, setStocks] = useState({\n    stocks: []\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(StocksList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"xgty4QcRVY6ZFYLAivzXCQCsVP8=\");\n\n_c = App;\n\nconst StocksList = props => {\n  _s2();\n\n  const [stocklist, setStocklist] = useState([]);\n\n  const getStocks = () => {\n    if (!storageIsEmpty()) {\n      setStocklist(getStockList().map(x => x));\n    }\n  };\n\n  useEffect(() => {\n    // side effect\n    getStocks(); // cleanup function -- called when dependencies change or component is unmounted\n\n    return () => {// setStocklist([]);\n    };\n  }, [stocklist]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: stocklist\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}; // helper functions\n\n\n_s2(StocksList, \"5Jw1iPlc9K1LOvTeuelNeVxGM5c=\");\n\n_c2 = StocksList;\n\nfunction storageIsEmpty() {\n  return localStorage.getItem(KEY) === null;\n}\n\nfunction getStockList() {\n  return JSON.parse(localStorage.getItem(KEY));\n}\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"StocksList\");","map":{"version":3,"sources":["/Users/didymusne/Documents/projects/watchlist/src/App.js"],"names":["React","useState","useEffect","KEY","App","stocks","setStocks","StocksList","props","stocklist","setStocklist","getStocks","storageIsEmpty","getStockList","map","x","localStorage","getItem","JSON","parse"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,QAAZ;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACnCI,IAAAA,MAAM,EAAE;AAD2B,GAAD,CAApC;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAbD;;GAAMD,G;;KAAAA,G;;AAeN,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMU,SAAS,GAAG,MAAM;AACtB,QAAI,CAACC,cAAc,EAAnB,EAAuB;AACrBF,MAAAA,YAAY,CAACG,YAAY,GAAGC,GAAf,CAAmBC,CAAC,IAAIA,CAAxB,CAAD,CAAZ;AACD;AACF,GAJD;;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACd;AACAS,IAAAA,SAAS,GAFK,CAId;;AACA,WAAO,MAAM,CACX;AACD,KAFD;AAGD,GARQ,EAQN,CAACF,SAAD,CARM,CAAT;AAUA,sBACE;AAAA,cACKA;AADL;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzBD,C,CA2BA;;;IA3BMF,U;;MAAAA,U;;AA4BN,SAASK,cAAT,GAA0B;AACxB,SAAOI,YAAY,CAACC,OAAb,CAAqBd,GAArB,MAA8B,IAArC;AACD;;AAED,SAASU,YAAT,GAAwB;AACtB,SAAOK,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqBd,GAArB,CAAX,CAAP;AACD;;AAED,eAAeC,GAAf","sourcesContent":["import React from 'react';\nimport {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst KEY = \"stocks\";\n\nconst App = () => {\n\n  const [stocks, setStocks] = useState({\n    stocks: []\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <StocksList></StocksList>\n      </header>\n    </div>\n  );\n}\n\nconst StocksList = (props) => {\n  const [stocklist, setStocklist] = useState([]);\n\n  const getStocks = () => {\n    if (!storageIsEmpty()) {\n      setStocklist(getStockList().map(x => x));\n    }\n  }\n\n  useEffect(() => {\n    // side effect\n    getStocks();\n\n    // cleanup function -- called when dependencies change or component is unmounted\n    return () => {\n      // setStocklist([]);\n    };\n  }, [stocklist])\n\n  return (\n    <div>\n        {stocklist}\n    </div>\n  )\n  \n}\n\n// helper functions\nfunction storageIsEmpty() {\n  return localStorage.getItem(KEY) === null;\n}\n\nfunction getStockList() {\n  return JSON.parse(localStorage.getItem(KEY));\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}