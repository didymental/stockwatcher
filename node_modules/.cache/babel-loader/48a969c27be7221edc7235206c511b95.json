{"ast":null,"code":"var _jsxFileName = \"/Users/didymusne/Documents/projects/watchlist/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEY = \"stocks\";\n\nconst App = () => {\n  _s();\n\n  const [stocks, setStocks] = useState({\n    stocks: []\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Receive updates from stocks by adding them into your watchlist.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"xgty4QcRVY6ZFYLAivzXCQCsVP8=\");\n\n_c = App;\n\nconst StocksList = props => {\n  _s2();\n\n  const [stocklist, setStocklist] = useState({\n    list: []\n  });\n\n  if (!storageIsEmpty()) {\n    list = getStockList;\n    setStocklist({ ...stocklist,\n      stocklist: list.map(x => x)\n    });\n  }\n};\n\n_s2(StocksList, \"8o4DH3mju8EtF3Oa2pK1n+G9piw=\");\n\n_c2 = StocksList;\n\nfunction storageIsEmpty() {\n  return localStorage.getItem(KEY) === null;\n}\n\nfunction getStockList() {\n  return JSON.parse(localStorage.getItem(KEY));\n}\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"StocksList\");","map":{"version":3,"sources":["/Users/didymusne/Documents/projects/watchlist/src/App.js"],"names":["React","useState","useEffect","KEY","App","stocks","setStocks","logo","StocksList","props","stocklist","setStocklist","list","storageIsEmpty","getStockList","map","x","localStorage","getItem","JSON","parse"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,QAAZ;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACnCI,IAAAA,MAAM,EAAE;AAD2B,GAAD,CAApC;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEE,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAhBD;;GAAMH,G;;KAAAA,G;;AAkBN,MAAMI,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC;AACzCW,IAAAA,IAAI,EAAE;AADmC,GAAD,CAA1C;;AAIA,MAAI,CAACC,cAAc,EAAnB,EAAuB;AACrBD,IAAAA,IAAI,GAAGE,YAAP;AACAH,IAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAeA,MAAAA,SAAS,EAAEE,IAAI,CAACG,GAAL,CAASC,CAAC,IAAIA,CAAd;AAA1B,KAAD,CAAZ;AACD;AAEF,CAVD;;IAAMR,U;;MAAAA,U;;AAYN,SAASK,cAAT,GAA0B;AACxB,SAAOI,YAAY,CAACC,OAAb,CAAqBf,GAArB,MAA8B,IAArC;AACD;;AAED,SAASW,YAAT,GAAwB;AACtB,SAAOK,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqBf,GAArB,CAAX,CAAP;AACD;;AAED,eAAeC,GAAf","sourcesContent":["import React from 'react';\nimport {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst KEY = \"stocks\";\n\nconst App = () => {\n\n  const [stocks, setStocks] = useState({\n    stocks: []\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Receive updates from stocks by adding them into your watchlist.\n        </p>\n      </header>\n    </div>\n  );\n}\n\nconst StocksList = (props) => {\n  const [stocklist, setStocklist] = useState({\n    list: [],\n  });\n\n  if (!storageIsEmpty()) {\n    list = getStockList;\n    setStocklist({...stocklist, stocklist: list.map(x => x)});\n  }\n  \n}\n\nfunction storageIsEmpty() {\n  return localStorage.getItem(KEY) === null;\n}\n\nfunction getStockList() {\n  return JSON.parse(localStorage.getItem(KEY));\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}