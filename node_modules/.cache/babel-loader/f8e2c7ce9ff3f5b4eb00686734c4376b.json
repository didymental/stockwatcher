{"ast":null,"code":"var _jsxFileName = \"/Users/didymusne/Documents/projects/watchlist/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEY = \"stocks\";\n\nconst App = () => {\n  _s();\n\n  const [stocks, setStocks] = useState({\n    list: [],\n    updateCounter: 0\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(StocksList, {\n        stocks: stocks,\n        setStocks: setStocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StockAdder, {\n        stocks: stocks,\n        setStocks: setStocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"J1y5Iz2lNiKdV/CMKmM4TyeuOF8=\");\n\n_c = App;\n\nconst StockAdder = ({\n  stocks\n}) => {\n  const addStocks = stock => {\n    let copy = [...stocks.list, stock];\n    updateStockList(copy);\n    setStoc;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addStocks(\"testing\"),\n      children: \"Add stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = StockAdder;\n\nconst StocksList = ({\n  stocks,\n  setStocks\n}) => {\n  _s2();\n\n  const getStocks = () => {\n    if (!storageIsEmpty()) {\n      setStocks({ ...stocks,\n        list: getStockList().map(x => x)\n      });\n    }\n  };\n\n  useEffect(() => {\n    // side effect\n    getStocks(); //cleanup function -- called when dependencies change or component is unmounted\n\n    return () => {\n      setStocks({ ...stocks,\n        list: []\n      });\n    };\n  }, [stocks.updateCounter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: stocks.list\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}; // helper functions\n\n\n_s2(StocksList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c3 = StocksList;\n\nfunction storageIsEmpty() {\n  return localStorage.getItem(KEY) === null;\n}\n\nfunction getStockList() {\n  return JSON.parse(localStorage.getItem(KEY));\n}\n\nfunction updateStockList(list) {\n  return localStorage.setItem(KEY, JSON.stringify(list));\n}\n\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"StockAdder\");\n$RefreshReg$(_c3, \"StocksList\");","map":{"version":3,"sources":["/Users/didymusne/Documents/projects/watchlist/src/App.js"],"names":["React","useState","useEffect","KEY","App","stocks","setStocks","list","updateCounter","StockAdder","addStocks","stock","copy","updateStockList","setStoc","StocksList","getStocks","storageIsEmpty","getStockList","map","x","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,QAAZ;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AACnCM,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,aAAa,EAAE;AAFoB,GAAD,CAApC;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEH,MAApB;AAA4B,QAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,MAAM,EAAED,MAApB;AAA4B,QAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAfD;;GAAMF,G;;KAAAA,G;;AAiBN,MAAMK,UAAU,GAAG,CAAC;AAACJ,EAAAA;AAAD,CAAD,KAAc;AAC/B,QAAMK,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAIC,IAAI,GAAG,CAAC,GAAGP,MAAM,CAACE,IAAX,EAAiBI,KAAjB,CAAX;AACAE,IAAAA,eAAe,CAACD,IAAD,CAAf;AACAE,IAAAA,OAAO;AACR,GAJD;;AAMA,sBACE;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAE,MAAMJ,SAAS,CAAC,SAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAZD;;MAAMD,U;;AAcN,MAAMM,UAAU,GAAG,CAAC;AAACV,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA;;AAE1C,QAAMU,SAAS,GAAG,MAAM;AACtB,QAAI,CAACC,cAAc,EAAnB,EAAuB;AACrBX,MAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYE,QAAAA,IAAI,EAAEW,YAAY,GAAGC,GAAf,CAAmBC,CAAC,IAAIA,CAAxB;AAAlB,OAAD,CAAT;AACD;AACF,GAJD;;AAMAlB,EAAAA,SAAS,CAAC,MAAM;AACd;AACAc,IAAAA,SAAS,GAFK,CAId;;AACA,WAAO,MAAM;AACXV,MAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYE,QAAAA,IAAI,EAAE;AAAlB,OAAD,CAAT;AACD,KAFD;AAGD,GARQ,EAQN,CAACF,MAAM,CAACG,aAAR,CARM,CAAT;AAUA,sBACE;AAAA,cACKH,MAAM,CAACE;AADZ;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAxBD,C,CA0BA;;;IA1BMQ,U;;MAAAA,U;;AA2BN,SAASE,cAAT,GAA0B;AACxB,SAAOI,YAAY,CAACC,OAAb,CAAqBnB,GAArB,MAA8B,IAArC;AACD;;AAED,SAASe,YAAT,GAAwB;AACtB,SAAOK,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqBnB,GAArB,CAAX,CAAP;AACD;;AAED,SAASU,eAAT,CAAyBN,IAAzB,EAA+B;AAC7B,SAAOc,YAAY,CAACI,OAAb,CAAqBtB,GAArB,EAA0BoB,IAAI,CAACG,SAAL,CAAenB,IAAf,CAA1B,CAAP;AACD;;AAED,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport {useState, useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst KEY = \"stocks\";\n\nconst App = () => {\n\n  const [stocks, setStocks] = useState({\n    list: [],\n    updateCounter: 0,\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <StocksList stocks={stocks} setStocks={setStocks}></StocksList>\n        <StockAdder stocks={stocks} setStocks={setStocks}></StockAdder>\n      </header>\n    </div>\n  );\n}\n\nconst StockAdder = ({stocks}) => {\n  const addStocks = (stock) => {\n    let copy = [...stocks.list, stock];\n    updateStockList(copy);\n    setStoc\n  }\n\n  return (\n    <div>\n      <button onClick={() => addStocks(\"testing\")}>Add stock</button>\n    </div>\n  )\n}\n\nconst StocksList = ({stocks, setStocks}) => {\n\n  const getStocks = () => {\n    if (!storageIsEmpty()) {\n      setStocks({...stocks, list: getStockList().map(x => x)});\n    }\n  }\n\n  useEffect(() => {\n    // side effect\n    getStocks();\n\n    //cleanup function -- called when dependencies change or component is unmounted\n    return () => {\n      setStocks({...stocks, list: []});\n    };\n  }, [stocks.updateCounter])\n\n  return (\n    <div>\n        {stocks.list}\n    </div>\n  )\n  \n}\n\n// helper functions\nfunction storageIsEmpty() {\n  return localStorage.getItem(KEY) === null;\n}\n\nfunction getStockList() {\n  return JSON.parse(localStorage.getItem(KEY));\n}\n\nfunction updateStockList(list) {\n  return localStorage.setItem(KEY, JSON.stringify(list));\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}