{"ast":null,"code":"var _jsxFileName = \"/Users/didymusne/Documents/projects/watchlist/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEY = \"stocks\";\nconst API_URL = \"https://yh-finance.p.rapidapi.com/\";\nconst STOCK_SUMMARY = \"stock/v2/get-summary\"; // to be privated\n\nconst X_RAPID_KEY = \"58580ffebemsh82090c08f424cb2p1ca11djsnd897f9c7bc9c\";\n\nconst App = () => {\n  _s();\n\n  const [stocks, setStocks] = useState({\n    list: [],\n    updateCounter: 0\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(StocksList, {\n        stocks: stocks,\n        setStocks: setStocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StockAdder, {\n        stocks: stocks,\n        setStocks: setStocks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"J1y5Iz2lNiKdV/CMKmM4TyeuOF8=\");\n\n_c = App;\n\nconst SearchBar = () => {\n  _s2();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const searchStock = () => {\n    axios.get(API_URL + STOCK_SUMMARY, {});\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: term => getSearchTerm(term, setSearchTerm)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Search Stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SearchBar, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n\n_c2 = SearchBar;\n\nconst StockAdder = ({\n  stocks,\n  setStocks\n}) => {\n  const addStocks = stock => {\n    let copy = [...stocks.list, stock];\n    updateStockList(copy, stocks, setStocks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addStocks(\"testing\"),\n      children: \"Add stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = StockAdder;\n\nconst StocksList = ({\n  stocks,\n  setStocks\n}) => {\n  _s3();\n\n  const getStocks = () => {\n    if (!storageIsEmpty()) {\n      setStocks({ ...stocks,\n        list: getStockList().map(x => x)\n      });\n    }\n  };\n\n  useEffect(() => {\n    // side effect\n    getStocks(); // cleanup function -- called when dependencies change or component is unmounted\n\n    return () => {\n      setStocks({ ...stocks,\n        list: []\n      });\n    };\n  }, [stocks.updateCounter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: stocks.list\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}; // StockList helper functions\n\n\n_s3(StocksList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c4 = StocksList;\n\nfunction storageIsEmpty() {\n  return localStorage.getItem(KEY) === null;\n}\n\nfunction getStockList() {\n  return JSON.parse(localStorage.getItem(KEY));\n} // StockAdder helper functions\n\n\nfunction updateStockList(list, stocks, setStocks) {\n  localStorage.setItem(KEY, JSON.stringify(list));\n  setStocks({ ...stocks,\n    updateCounter: stocks.updateCounter + 1\n  });\n} // SearchBar helper functions\n\n\nfunction getSearchTerm(term, setSearchTerm) {\n  setSearchTerm(term.target.value);\n} // API functions\n\n\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SearchBar\");\n$RefreshReg$(_c3, \"StockAdder\");\n$RefreshReg$(_c4, \"StocksList\");","map":{"version":3,"sources":["/Users/didymusne/Documents/projects/watchlist/src/App.js"],"names":["React","useState","useEffect","axios","KEY","API_URL","STOCK_SUMMARY","X_RAPID_KEY","App","stocks","setStocks","list","updateCounter","SearchBar","searchTerm","setSearchTerm","searchStock","get","term","getSearchTerm","StockAdder","addStocks","stock","copy","updateStockList","StocksList","getStocks","storageIsEmpty","getStockList","map","x","localStorage","getItem","JSON","parse","setItem","stringify","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst KEY = \"stocks\";\nconst API_URL = \"https://yh-finance.p.rapidapi.com/\";\nconst STOCK_SUMMARY = \"stock/v2/get-summary\";\n\n// to be privated\nconst X_RAPID_KEY = \"58580ffebemsh82090c08f424cb2p1ca11djsnd897f9c7bc9c\";\n\nconst App = () => {\n\n  const [stocks, setStocks] = useState({\n    list: [],\n    updateCounter: 0,\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <StocksList stocks={stocks} setStocks={setStocks}></StocksList>\n        <StockAdder stocks={stocks} setStocks={setStocks}></StockAdder>\n        <SearchBar></SearchBar>\n      </header>\n    </div>\n  );\n}\n\nconst SearchBar = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const searchStock = () => {\n    axios.get(API_URL + STOCK_SUMMARY, {\n      \n    })\n  }\n\n  return (\n    <div>\n      <input onChange={(term) => getSearchTerm(term, setSearchTerm)}/>\n      <button>Search Stock</button>\n    </div>\n  )\n}\n\nconst StockAdder = ({stocks, setStocks}) => {\n  const addStocks = (stock) => {\n    let copy = [...stocks.list, stock];\n    updateStockList(copy, stocks, setStocks);\n  }\n\n  return (\n    <div>\n      <button onClick={() => addStocks(\"testing\")}>Add stock</button>\n    </div>\n  )\n}\n\nconst StocksList = ({stocks, setStocks}) => {\n\n  const getStocks = () => {\n    if (!storageIsEmpty()) {\n      setStocks({...stocks, list: getStockList().map(x => x)});\n    }\n  }\n\n  useEffect(() => {\n    // side effect\n    getStocks();\n\n    // cleanup function -- called when dependencies change or component is unmounted\n    return () => {\n      setStocks({...stocks, list: []});\n    };\n  }, [stocks.updateCounter])\n\n  return (\n    <div>\n        {stocks.list}\n    </div>\n  )\n  \n}\n\n// StockList helper functions\nfunction storageIsEmpty() {\n  return localStorage.getItem(KEY) === null;\n}\n\nfunction getStockList() {\n  return JSON.parse(localStorage.getItem(KEY));\n}\n\n// StockAdder helper functions\nfunction updateStockList(list, stocks, setStocks) {\n  localStorage.setItem(KEY, JSON.stringify(list));\n  setStocks({...stocks, updateCounter: stocks.updateCounter + 1});\n}\n\n// SearchBar helper functions\nfunction getSearchTerm(term, setSearchTerm) {\n  setSearchTerm(term.target.value);\n}\n\n// API functions\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}